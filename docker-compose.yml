version: '3'
services:
  zk.local:
    image: zookeeper
    network_mode: host
    restart: always

  marathon.local:
    image: mesosphere/marathon:v1.4.0-RC8
    network_mode: host
    restart: always
    environment:
      MARATHON_MASTER: zk://127.0.0.1:2181/mesos
      MARATHON_ZK: zk://127.0.0.1:2181/marathon
      MARATHON_HOSTNAME: marathon.local
      MARATHON_LOGGING_LEVEL: warn
    depends_on:
      - zk.local

  mesos.local:
    image: mesosphere/mesos-master:1.1.1-rc1
    network_mode: host
    restart: always
    environment:
      MESOS_ZK: zk://127.0.0.1:2181/mesos
      MESOS_QUORUM: 1
      MESOS_CLUSTER: master-local
      MESOS_REGISTRY: replicated_log
      MESOS_HOSTNAME: mesos.local
      MESOS_LOGGING_LEVEL: WARNING
    depends_on:
      - zk.local

  mesos-slave-one.local:
    image: mesosphere/mesos-slave:1.1.1-rc1
    network_mode: host
    restart: always
    environment:
      MESOS_MASTER: zk://127.0.0.1:2181/mesos
      MESOS_CONTAINERIZERS: mesos,docker
      MESOS_PORT: 5051
      MESOS_RESOURCES: ports(*):[11000-11020]
      MESOS_HOSTNAME: mesos-slave-one.local
      MESOS_WORK_DIR: /tmp/mesos
      MESOS_LOGGING_LEVEL: WARNING
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mesos.local

  mesos-slave-two.local:
    image: mesosphere/mesos-slave:1.1.1-rc1
    network_mode: host
    restart: always
    environment:
      MESOS_MASTER: zk://127.0.0.1:2181/mesos
      MESOS_CONTAINERIZERS: mesos,docker
      MESOS_PORT: 5052
      MESOS_RESOURCES: ports(*):[12000-12020]
      MESOS_HOSTNAME: mesos-slave-two.local
      MESOS_WORK_DIR: /tmp/mesos
      MESOS_LOGGING_LEVEL: WARNING
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mesos-slave-one.local

  consul.local:
    image: consul
    network_mode: host
    restart: always
    command: agent -dev -client 0.0.0.0 -log-level info

  docker-registrator:
    image: gliderlabs/registrator
    network_mode: host
    restart: always
    command: -ip=127.0.0.1 consul://127.0.0.1:8500
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    depends_on:
      - consul.local

  nginx-consul-serve:
    image: kulikov/nginx-consul-serve
    build: ./nginx-consul-serve
    network_mode: host
    restart: always
    depends_on:
      - consul.local

  root-settings:
    image: alpine
    command: /bin/sh -c "echo '172.17.0.1 moby zk.local marathon.local mesos.local mesos-slave-one.local mesos-slave-two.local' >> /vm-root/etc/hosts"
    volumes:
      - /:/vm-root
